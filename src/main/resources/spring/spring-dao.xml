<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd">

    <!-- 配置整合MyBatis -->
    <!-- 1.配置数据库 -->
    <context:property-placeholder location="classpath:jdbc.properties"/>
    <!-- 2.配置数据库的连接池 -->
    <bean id="datasource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
        <!-- 配置连接池属性 -->
        <property name="driverClass" value="${driver}"/>
        <property name="jdbcUrl" value="${jdbcUrl}"/>
        <property name="user" value="${name}"/>
        <property name="password" value="${password}"/>
        <!-- 配置连接池的私有属性 -->
        <property name="maxPoolSize" value="30"/>
        <property name="minPoolSize" value="10"/>
        <!-- 关闭连接后，不自动commit -->
        <property name="autoCommitOnClose" value="false"/>
        <!-- 获取连接的超时时间 -->
        <property name="checkoutTimeout" value="1000"/>
        <!-- 连接失败时的重试次数 -->
        <property name="acquireRetryAttempts" value="2"/>
    </bean>
    <!-- 约定大于配置 -->
    <!-- 3.配置SqlSessionFactory对象 -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <!-- 注入数据库连接池 -->
        <property name="dataSource" ref="datasource"/>
        <!-- 配置MyBatis的全局配置文件：mybatis-config.xml -->
        <property name="configLocation" value="classpath:mybatis-config.xml"/>
        <!-- 扫描entity包，使用别名 -->
        <property name="typeAliasesPackage" value="org.seckill.entity"/>
        <!-- 扫描sql配置文件：mapper需要的xml文件 -->
        <property name="mapperLocations" value="classpath:mapper/*.xml"/>
    </bean>
    <!-- 4.配置扫描DAO接口包，动态实现DAO接口，并注入到Spring容器中 -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <!-- 注入sqlSessionFactory -->
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
        <!-- 给出需要扫描的DAO接口包 -->
        <property name="basePackage" value="org.seckill.dao"/>
    </bean>

    <!-- RedisDao -->
    <bean id="redisDao" class="org.seckill.dao.cache.RedisDao">
        <constructor-arg index="0" value="192.168.70.130"/>
        <constructor-arg index="1" value="6379"/>
    </bean>
</beans>